* EXATO: Evil XML/HTML Attributes Text Object

[[https://travis-ci.org/ninrod/exato][https://travis-ci.org/ninrod/exato.png]]
[[https://melpa.org/#/exato][file:https://melpa.org/packages/exato-badge.svg]]

[[https://www.w3schools.in/wp-content/uploads/2014/07/HTML-attribute.jpg][https://www.w3schools.in/wp-content/uploads/2014/07/HTML-attribute.jpg]]

* Installation

To enable it, you have two options while we wait for melpa to merge in exato's [[https://github.com/melpa/melpa/pull/5122][recipe]].

- Use [[https://github.com/jwiegley/use-package][use-package]] and specify the loadpath in one-shot. Tthis is the recommended way.

#+BEGIN_SRC emacs-lisp
;; you could specify any path
(use-package exato :load-path "~/.emacs.d/vendor/exato/exato.el")
#+END_SRC

- add the =exato.el= to your configs loadpath and write:
#+BEGIN_SRC emacs-lisp
(require 'exato)
#+END_SRC

* Usage

This package provides the =x= text object to manipulate html/xml tag attributes.
You can customize the binding.

Try using =dax=, =vix= and =gUix=.

* Examples

cursor on =[]=

- Issuing =dax= inside:

#+BEGIN_SRC html
  <a href="index.html" class="btn btn-primary [f]oo bar buz">link</a>
#+END_SRC

Results in:

#+BEGIN_SRC html
<a href="index.html">link</a>
#+END_SRC

* Customization

=Exato= binds the =x= key for you by default. You can change this with the =exato-key= variable.

=exato-key=: (Default: =x=)

write this line in your =~/.emacs.d/init.el=

#+BEGIN_SRC emacs-lisp
;; this will bind the `h` text object: so dah, dih, etc... will work instead of dax, dix...
(setq exato-key "h")
#+END_SRC
* Credits

This package is inspired in Andrea Leopardi's [[https://github.com/whatyouhide/vim-textobj-xmlattr][vim-textobj-xmlattr]] plugin.

* LICENSE

- [[https://www.gnu.org/licenses/gpl-3.0.en.html][GNU General Public License v3]]
#+BEGIN_SRC text
GNU General Public License v3
Copyright (c) 2017 Filipe Correa Lima da Silva (ninrod)
#+END_SRC

